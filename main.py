import os
import matrix as m
# .. Main Test .. 
os.system('clear all')
print("This is a Demo of how to use the matrix library ..") 
input("push a button")
# .. Define the matrices ..    
C = m.matrix(4,4)
A = m.matrix(4,5)
# .. Fill the values into the matrix ..
C.put(0,0,3)
C.put(1,0,5)
C.put(2,0,7)
C.put(3,0,9)
#
C.put(0,1,11)
C.put(1,1,3)
C.put(2,1,1)
C.put(3,1,9)
#
C.put(0,2,4)
C.put(1,2,2)
C.put(2,2,13)
C.put(3,2,7)
#
C.put(0,3,1)
C.put(1,3,3)
C.put(2,3,7)
C.put(3,3,9)
print("Show the Matrix")
C.Show()
input("push a button")
os.system('clear all')
print("Generates a matrix of scalar")
A.Scalar(3)
A.Show()
input("push a button")
os.system('clear all')
print("Test Gauss Algorithm")
C.Gauss()
print("Gauss C")
C.Show()
input("push a button")
os.system('clear all')
print("Gauss-Jordan")
C.GaussJordan()
C.Show()
input("push a button")
os.system('clear all')
print("Test the transpose")
A.put(0,0,1)
A.put(0,1,2)
A.put(0,2,3)
A.put(0,3,-1)
A.put(0,4,3)
#
A.put(1,0,2)
A.put(1,1,4)
A.put(1,2,2)
A.put(1,3,1)
A.put(1,4,-1)
#
A.put(2,0,-1)
A.put(2,1,0)
A.put(2,2,1)
A.put(2,3,3)
A.put(2,4,-3)
#
A.put(3,0,2)
A.put(3,1,1)
A.put(3,2,-2)
A.put(3,3,-1)
A.put(3,4,0)
#
B=A
B.Show()
print("Trasposal:")
A.Trans()
A.Show()
input("push a button")
os.system('clear all')
print("Test Det 2x2")
A = m.matrix(2,2)
A.put(0,0,1)
A.put(0,1,2)
A.put(1,0,3)
A.put(1,1,4)
A.Show()
print("Det:",A.Det())
input("push a button")
os.system('clear all')
print("Test Det 3x3")
A = m.matrix(3,3)
#
A.put(0,0,1)
A.put(0,1,2)
A.put(0,2,3)
#
A.put(1,0,4)
A.put(1,1,5)
A.put(1,2,6)
#
A.put(2,0,7)
A.put(2,1,8)
A.put(2,2,9)
#
A.Show()
print("Det(A):",A.Det())
input("push a button")
os.system('clear all')
print("Test Det 4x4")#
A = m.matrix(4,4)
#
A.put(0,0,1)
A.put(0,1,2)
A.put(0,2,1)
A.put(0,3,1)
#
A.put(1,0,2)
A.put(1,1,1)
A.put(1,2,3)
A.put(1,3,1)
#
A.put(2,0,0)
A.put(2,1,2)
A.put(2,2,2)
A.put(2,3,0)
#
A.put(3,0,1)
A.put(3,1,2)
A.put(3,2,0)
A.put(3,3,0)
#
A.Show()
print("Determinante:",A.Det())
input("push a button")
os.system('clear all')
print("Test Submatrix extraction")
A.Show()
print("Submatrix:")
SUB=A.SubExt(0,2,0,1)
SUB.Show()
input("push a button")
os.system('clear all')
# .. Test insertion of a submatrix SUB into a matrix A ..
print("Test insertion of a submatrix SUB into a matrix A")
C=m.InsSub(1,2,A,SUB)
C.Show()
input("push a button")
os.system('clear all')
# .. Test the sum ..
print("Test sum overloading A+A")
A.Show()
C=A+A
print("A+A:")
C.Show()
input("push a button")
os.system('clear all')
# .. Test the product ..
print("Test product overloading operator *")
print("Row x Column")
A = m.matrix(1,3)
A.put(0,0,1)
A.put(0,1,2)
A.put(0,2,3)
print("Matrix A:")
A.Show()
B = m.matrix(3,1)
B.put(0,0,4)
B.put(1,0,5)
B.put(2,0,6)
print("Matrix B:")
B.Show()
print("Product A*B:")
C=A*B
C.Show()
input("push a button")
os.system('clear all')
print("Test prod of a 2x2 matrix")
A = m.matrix(2,2)
A.put(0,0,1)
A.put(0,1,2)
A.put(1,0,3)
A.put(1,1,4)
print("A:")
A.Show()
B = A
C=A*B
print("A*A:")
C.Show()
input("push a button")
os.system('clear all')
#
print("Second 2x2 prod test")
A = m.matrix(2,2)
B = m.matrix(2,2)
A.put(0,0,1)
A.put(0,1,2)
A.put(1,0,2)
A.put(1,1,3)
print("Matrix A:")
A.Show()
B.put(0,0,1)
B.put(0,1,2)
B.put(1,0,2)
B.put(1,1,4)
print("Matrix B:")
B.Show()
print("A*B:")
C=A*B
C.Show()
input("push a button")
os.system('clear all')
#
print("Test the inversion of a matrix:")
print("A:")
A.Show()
INV=A.Inv()
print("inverse A:")
INV.Show()
print("Check: A*(INV(A))=I")
D=A*INV
D.Show()
input("push a button")
os.system('clear all')
print("Test the multiply a matrix for a scalar:")
A.Show()
A.MultForScalar(10)
print("10*A:")
A.Show()
input("push a button")
os.system('clear all')
print("Test the generation of a random matrix:")
A = m.matrix(5,5)
A.Random(1,20)
A.Show()
input("push a button")
os.system('clear all')
print("2x2 Rank matrix estimation")
A = m.matrix(2,2)
A.Random(1,10)
A.Show()
print("The matrix Rank is:",A.Rank())
input("push a button")
os.system('clear all')
print("3x3 Rank matrix estimation")
A = m.matrix(3,3)
A.Random(1,10)
A.Show()
print("The matrix Rank is:",A.Rank())
input("push a button")
os.system('clear all')
A = m.matrix(4,4)
A.Random(1,10)
A.Show()
print("The matrix Rank is:",A.Rank())
input("push a button")
os.system('clear all')
A = m.matrix(3,3)
#
A.put(0,0,1)
A.put(0,1,2)
A.put(0,2,3)
#
A.put(1,0,4)
A.put(1,1,5)
A.put(1,2,6)
#
A.put(2,0,7)
A.put(2,1,8)
A.put(2,2,9)
#
A.Show()
print("The matrix Rank is:",A.Rank())
input("push a button")
os.system('clear all')
#
A = m.matrix(3,3)
U = m.matrix(3,3)
L = m.matrix(3,3)
#
A.put(0,0,2)
A.put(0,1,1)
A.put(0,2,0)
#
A.put(1,0,1)
A.put(1,1,3)
A.put(1,2,-1)
#
A.put(2,0,1)
A.put(2,1,1)
A.put(2,2,0)
#
os.system('clear all')
print("Test A=LU Factorization")
A.Show()
print("The U matrix is:")
L, U= A.LU()
U.Show()
print("The L matrix is:")
L.Show()
print("Check A=LU:")
(L*U).Show()
input("push a button")
os.system('clear all')
exit(0) 

input("Thats all folks!")
os.system('clear all')
exit(0)